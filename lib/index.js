// Generated by LiveScript 1.5.0
var livescript, through, options, compile, isLive;
livescript = require('livescript');
through = require('through');
options = {
  bare: true,
  map: 'embedded'
};
compile = function(file, data){
  var compiled;
  compiled = livescript.compile(data, import$({
    filename: file
  }, options));
  return compiled.code + '\n';
};
isLive = function(file){
  return /.*\.ls$/.test(file);
};
module.exports = function(file){
  var data, write, end;
  if (!isLive(file)) {
    return through();
  }
  data = '';
  write = function(it){
    data += it;
  };
  end = function(){
    var src, e;
    try {
      src = compile(file, data);
    } catch (e$) {
      e = e$;
      this.emit('error', e);
    }
    this.queue(src);
    this.queue(null);
  };
  return through(write, end);
};
function import$(obj, src){
  var own = {}.hasOwnProperty;
  for (var key in src) if (own.call(src, key)) obj[key] = src[key];
  return obj;
}